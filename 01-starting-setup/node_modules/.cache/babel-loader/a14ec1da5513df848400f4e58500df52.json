{"ast":null,"code":"var _jsxFileName = \"/Users/mammagan/React-latest/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  // const [expensesList, setExpensesList] = useState(props.items);\n  const [year, setYear] = useState(\"2020\"); // const [updatedExpense, setUpdatedExpense] = useState(props.expense);\n  // setUpdatedExpense({\n  //   expense: props.expense\n  // })\n  // console.log();\n\n  const expenseFilterChangeHandler = year => {\n    console.log(\"in Expenses\");\n    console.log(year);\n    setYear(year);\n    console.log(props.items);\n  };\n\n  const filteredExpensesList = props.items.filter(item => item.date.getFullYear().toString() === year);\n  console.log(\"filteredList\");\n  console.log(filteredExpensesList);\n\n  let filteredExpenses = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 26\n  }, this);\n\n  if (filteredExpenses.length > 0) // const expense = props.expense;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expenses\",\n        children: /*#__PURE__*/_jsxDEV(ExpenseFilter, {\n          selected: year,\n          onFilterChange: expenseFilterChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n};\n\n_s(Expenses, \"yCSp7yteJ4gwWCBMvRbb4Pxa8Xw=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/mammagan/React-latest/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","year","setYear","expenseFilterChangeHandler","console","log","items","filteredExpensesList","filter","item","date","getFullYear","toString","filteredExpenses","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAD,CAAhC,CAF0B,CAI1B;AAEA;AACA;AACA;AAEA;;AAEA,QAAMQ,0BAA0B,GAAIF,IAAD,IAAU;AAC3CG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,KAAlB;AACD,GALD;;AAOA,QAAMC,oBAAoB,GAAGP,KAAK,CAACM,KAAN,CAAYE,MAAZ,CAC1BC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCX,IADtB,CAA7B;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYE,oBAAZ;;AACA,MAAIM,gBAAgB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvB;;AACA,MAAGA,gBAAgB,CAACC,MAAjB,GAA0B,CAA7B,EAEA;AACA,wBACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,QAAQ,EAAEb,IADZ;AAEE,UAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD,CA7DD;;GAAMJ,Q;;KAAAA,Q;AA+DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\n\nconst Expenses = (props) => {\n  // const [expensesList, setExpensesList] = useState(props.items);\n  const [year, setYear] = useState(\"2020\");\n\n  // const [updatedExpense, setUpdatedExpense] = useState(props.expense);\n\n  // setUpdatedExpense({\n  //   expense: props.expense\n  // })\n\n  // console.log();\n\n  const expenseFilterChangeHandler = (year) => {\n    console.log(\"in Expenses\");\n    console.log(year);\n    setYear(year);\n    console.log(props.items);\n  };\n\n  const filteredExpensesList = props.items.filter(\n    (item) => item.date.getFullYear().toString() === year\n  );\n  console.log(\"filteredList\");\n  console.log(filteredExpensesList);\n  let filteredExpenses = <p>No Expenses Found.</p>;\n  if(filteredExpenses.length > 0)\n\n  // const expense = props.expense;\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          selected={year}\n          onFilterChange={expenseFilterChangeHandler}\n        />\n\n        {/* {filteredExpensesList.length === 0 && <p>No Expenses Found.</p>}\n        {filteredExpensesList.length > 0 && filteredExpensesList.map((item) => (\n            <ExpenseItem\n              key={item.id}\n              title={item.title}\n              amount={item.amount}\n              date={item.date}\n            />\n          ))\n        } */}\n        {/* {filteredExpensesList.length === 0 ? (\n          <p>No Expenses Found.</p>\n        ) : (\n          filteredExpensesList.map((item) => (\n            <ExpenseItem\n              key={item.id}\n              title={item.title}\n              amount={item.amount}\n              date={item.date}\n            />\n          ))\n        )} */}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}